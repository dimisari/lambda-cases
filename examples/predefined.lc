
forty_two_over(_) : Z => Result(R)OrError(String)
  = ?
    0 => error--"Dividing by 0! BOOM"
    i => result--(42/i)

forty_two_over(_)plus_forty_two_over(_) : Z^2 => Result(R)OrError(String)
  = (x, y) =>
    forty_two_over(x) >> z =>
    forty_two_over(y) >> w =>
    wrap(z + w)

test1 : Result(R)OrError(String)
  = forty_two_over(1)plus_forty_two_over(0)

test2 : Result(R)OrError(String)
  = forty_two_over(0)plus_forty_two_over(1)

test3 : Result(R)OrError(String)
  = forty_two_over(2)plus_forty_two_over(2)

print_result(_) : Result(R)OrError(String) => Program
  = ?
    error => print(err)
    result => print(res)

main : ProgramWith(EmptyVal)
  = print(pi); print(id(pi)); print(sqrt_of(pi)); print(abs_val_of(-1));
    print(max_of(1)and(2)); print(min_of(1)and(2));
    print(sin(pi)); print(cos(pi)); print(tan(pi));
    print(asin(1.0)); print(acos(1.0)); print(atan(1.0));
    print(gcd_of(42)and(18)); print(lcm_of(4)and(6));
    print((2)is_odd); print((2)is_even);
    print(truncate(1.1)); print(round(1.1));
    print(floor(1.1)); print(ceiling(1.1));
    print(exp(1.0)); print(ln(exp(1.0)));
    print(log_of(1024.0)base(2.0));
    print(take(2)from([1,2,3]));
    print(ignore(2)from([1,2,3]));
    print(filter([1,2,3])with(_ == 2));
    print(zip([1,2,3])with([4,5,6]));
    print(unzip([(1, 4), (2, 5), (3, 6)]));
    print(apply(_ + _)to_all_in_zipped([1,2,3], [6,5,4]));
    print(split([1,2,3,4,5,6])at_index(3));
    (get_char >> print(_));
    (get_input >> print(_));
    (read_file("../programs/hello_world.hs") >> write(_)to_file("out.txt"));
    print_string("Hello "); print("World!");
    print_result(test1); print_result(test2); print_result(test3);
    undefined
